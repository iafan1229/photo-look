version: "3"

services:
  nginx:
    build:
      context: ./nginx
      dockerfile: Dockerfile
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - frontend
      - server
    restart: always
    networks:
      - app-network
    volumes:
      - ./nginx/ssl:/etc/nginx/ssl

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    environment:
      - NODE_ENV=production
      # 환경 변수를 직접 참조 (GitHub Actions에서 설정)
      - NEXT_PUBLIC_GOOGLE_CLOUD_API_KEY
      - NEXT_PUBLIC_GEMINI_API_KEY
      - NEXT_PUBLIC_INSTAGRAM_ACCESS_TOKEN
      - NEXT_PUBLIC_S3_ACCESS_KEY_ID
      - NEXT_PUBLIC_S3_SECRET_ACCESS_KEY
    restart: always
    networks:
      - app-network
    volumes:
      - frontend_uploads:/app/public/uploads
    deploy:
      resources:
        limits:
          memory: 384M

  server:
    build:
      context: ./server
      dockerfile: Dockerfile
    environment:
      - NODE_ENV=production
      # 환경 변수를 직접 참조 (GitHub Actions에서 설정)
      - TS_NODE_PROJECT=tsconfig.json
      - AWS_REGION
      - AWS_S3_BUCKET_NAME
      - AWS_SECRET_ACCESS_KEY
      - DB_PASS
      - EC2_HOST
      - EC2_SSH_KEY
      - EMAIL_PASSWORD
      - EMAIL_USER
      - HOST
      - PORT
      - SITE_URL
    restart: always
    networks:
      - app-network
    deploy:
      resources:
        limits:
          memory: 192M

networks:
  app-network:
    driver: bridge

volumes:
  frontend_uploads:
    driver: local
